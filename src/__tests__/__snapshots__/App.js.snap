// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App Renders itself without error and only once 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    endpoint="http://localhost:9090/"
    languageCode="en"
    name="LDS"
    producer=""
    route="/lds/"
    specialFeatures={true}
    user="Test"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "basic": true,
      "children": Array [
        <Menu
          fixed="top"
        >
          <MenuItem
            as={[Function]}
            disabled={false}
            header={true}
            to="/lds/"
          >
            LDS Objects
            <Label
              color="teal"
              size="large"
            >
              0
            </Label>
          </MenuItem>
          <Dropdown
            additionLabel="Add "
            additionPosition="top"
            closeOnBlur={true}
            deburr={false}
            disabled={false}
            icon="dropdown"
            item={true}
            minCharacters={1}
            noResultsMessage="No results found."
            openOnFocus={true}
            renderLabel={[Function]}
            scrolling={true}
            searchInput="text"
            selectOnBlur={true}
            selectOnNavigation={true}
            text="Show all"
            wrapSelection={true}
          >
            <DropdownMenu />
          </Dropdown>
          <Dropdown
            additionLabel="Add "
            additionPosition="top"
            closeOnBlur={true}
            deburr={false}
            disabled={false}
            icon="dropdown"
            item={true}
            minCharacters={1}
            noResultsMessage="No results found."
            openOnFocus={true}
            renderLabel={[Function]}
            scrolling={true}
            searchInput="text"
            selectOnBlur={true}
            selectOnNavigation={true}
            text="Create new"
            wrapSelection={true}
          >
            <DropdownMenu />
          </Dropdown>
          <MenuItem
            as={[Function]}
            content="Import"
            to="/import"
          />
          <MenuMenu
            position="right"
          >
            <Dropdown
              additionLabel="Add "
              additionPosition="top"
              closeOnBlur={true}
              deburr={false}
              icon="dropdown"
              item={true}
              minCharacters={1}
              noResultsMessage="No results found."
              openOnFocus={true}
              renderLabel={[Function]}
              searchInput="text"
              selectOnBlur={true}
              selectOnNavigation={true}
              text="Language (English)"
              wrapSelection={true}
            >
              <DropdownMenu>
                <DropdownItem
                  onClick={[Function]}
                >
                  <Flag
                    as="i"
                    name="no"
                  />
                   
                  Norwegian
                </DropdownItem>
                <DropdownItem
                  onClick={[Function]}
                >
                  <Flag
                    as="i"
                    name="gb"
                  />
                   
                  English
                </DropdownItem>
              </DropdownMenu>
            </Dropdown>
          </MenuMenu>
        </Menu>,
        <Container
          fluid={true}
          style={
            Object {
              "marginTop": "5em",
            }
          }
        >
          <Message
            content="Cannot generate forms for objects without providing a producer for them"
            error={true}
          />
          <Route
            component={[Function]}
            exact={true}
            path="/import"
          />
        </Container>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <MenuItem
              as={[Function]}
              disabled={false}
              header={true}
              to="/lds/"
            >
              LDS Objects
              <Label
                color="teal"
                size="large"
              >
                0
              </Label>
            </MenuItem>,
            <Dropdown
              additionLabel="Add "
              additionPosition="top"
              closeOnBlur={true}
              deburr={false}
              disabled={false}
              icon="dropdown"
              item={true}
              minCharacters={1}
              noResultsMessage="No results found."
              openOnFocus={true}
              renderLabel={[Function]}
              scrolling={true}
              searchInput="text"
              selectOnBlur={true}
              selectOnNavigation={true}
              text="Show all"
              wrapSelection={true}
            >
              <DropdownMenu />
            </Dropdown>,
            <Dropdown
              additionLabel="Add "
              additionPosition="top"
              closeOnBlur={true}
              deburr={false}
              disabled={false}
              icon="dropdown"
              item={true}
              minCharacters={1}
              noResultsMessage="No results found."
              openOnFocus={true}
              renderLabel={[Function]}
              scrolling={true}
              searchInput="text"
              selectOnBlur={true}
              selectOnNavigation={true}
              text="Create new"
              wrapSelection={true}
            >
              <DropdownMenu />
            </Dropdown>,
            <MenuItem
              as={[Function]}
              content="Import"
              to="/import"
            />,
            <MenuMenu
              position="right"
            >
              <Dropdown
                additionLabel="Add "
                additionPosition="top"
                closeOnBlur={true}
                deburr={false}
                icon="dropdown"
                item={true}
                minCharacters={1}
                noResultsMessage="No results found."
                openOnFocus={true}
                renderLabel={[Function]}
                searchInput="text"
                selectOnBlur={true}
                selectOnNavigation={true}
                text="Language (English)"
                wrapSelection={true}
              >
                <DropdownMenu>
                  <DropdownItem
                    onClick={[Function]}
                  >
                    <Flag
                      as="i"
                      name="no"
                    />
                     
                    Norwegian
                  </DropdownItem>
                  <DropdownItem
                    onClick={[Function]}
                  >
                    <Flag
                      as="i"
                      name="gb"
                    />
                     
                    English
                  </DropdownItem>
                </DropdownMenu>
              </Dropdown>
            </MenuMenu>,
          ],
          "fixed": "top",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": [Function],
              "children": Array [
                "LDS Objects",
                <Label
                  color="teal"
                  size="large"
                >
                  0
                </Label>,
              ],
              "disabled": false,
              "header": true,
              "to": "/lds/",
            },
            "ref": null,
            "rendered": Array [
              "LDS Objects",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": 0,
                  "color": "teal",
                  "size": "large",
                },
                "ref": null,
                "rendered": 0,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "additionLabel": "Add ",
              "additionPosition": "top",
              "children": <DropdownMenu />,
              "closeOnBlur": true,
              "deburr": false,
              "disabled": false,
              "icon": "dropdown",
              "item": true,
              "minCharacters": 1,
              "noResultsMessage": "No results found.",
              "openOnFocus": true,
              "renderLabel": [Function],
              "scrolling": true,
              "searchInput": "text",
              "selectOnBlur": true,
              "selectOnNavigation": true,
              "text": "Show all",
              "wrapSelection": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [],
              },
              "ref": null,
              "rendered": Array [],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "additionLabel": "Add ",
              "additionPosition": "top",
              "children": <DropdownMenu />,
              "closeOnBlur": true,
              "deburr": false,
              "disabled": false,
              "icon": "dropdown",
              "item": true,
              "minCharacters": 1,
              "noResultsMessage": "No results found.",
              "openOnFocus": true,
              "renderLabel": [Function],
              "scrolling": true,
              "searchInput": "text",
              "selectOnBlur": true,
              "selectOnNavigation": true,
              "text": "Create new",
              "wrapSelection": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [],
              },
              "ref": null,
              "rendered": Array [],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": [Function],
              "content": "Import",
              "to": "/import",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Dropdown
                additionLabel="Add "
                additionPosition="top"
                closeOnBlur={true}
                deburr={false}
                icon="dropdown"
                item={true}
                minCharacters={1}
                noResultsMessage="No results found."
                openOnFocus={true}
                renderLabel={[Function]}
                searchInput="text"
                selectOnBlur={true}
                selectOnNavigation={true}
                text="Language (English)"
                wrapSelection={true}
              >
                <DropdownMenu>
                  <DropdownItem
                    onClick={[Function]}
                  >
                    <Flag
                      as="i"
                      name="no"
                    />
                     
                    Norwegian
                  </DropdownItem>
                  <DropdownItem
                    onClick={[Function]}
                  >
                    <Flag
                      as="i"
                      name="gb"
                    />
                     
                    English
                  </DropdownItem>
                </DropdownMenu>
              </Dropdown>,
              "position": "right",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "additionLabel": "Add ",
                "additionPosition": "top",
                "children": <DropdownMenu>
                  <DropdownItem
                    onClick={[Function]}
                  >
                    <Flag
                      as="i"
                      name="no"
                    />
                     
                    Norwegian
                  </DropdownItem>
                  <DropdownItem
                    onClick={[Function]}
                  >
                    <Flag
                      as="i"
                      name="gb"
                    />
                     
                    English
                  </DropdownItem>
                </DropdownMenu>,
                "closeOnBlur": true,
                "deburr": false,
                "icon": "dropdown",
                "item": true,
                "minCharacters": 1,
                "noResultsMessage": "No results found.",
                "openOnFocus": true,
                "renderLabel": [Function],
                "searchInput": "text",
                "selectOnBlur": true,
                "selectOnNavigation": true,
                "text": "Language (English)",
                "wrapSelection": true,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <DropdownItem
                      onClick={[Function]}
                    >
                      <Flag
                        as="i"
                        name="no"
                      />
                       
                      Norwegian
                    </DropdownItem>,
                    <DropdownItem
                      onClick={[Function]}
                    >
                      <Flag
                        as="i"
                        name="gb"
                      />
                       
                      English
                    </DropdownItem>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "norwegian",
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <Flag
                          as="i"
                          name="no"
                        />,
                        " ",
                        "Norwegian",
                      ],
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "as": "i",
                          "name": "no",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      " ",
                      "Norwegian",
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "english",
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <Flag
                          as="i"
                          name="gb"
                        />,
                        " ",
                        "English",
                      ],
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "as": "i",
                          "name": "gb",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      " ",
                      "English",
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Message
              content="Cannot generate forms for objects without providing a producer for them"
              error={true}
            />,
            Array [],
            Array [],
            <Route
              component={[Function]}
              exact={true}
              path="/import"
            />,
          ],
          "fluid": true,
          "style": Object {
            "marginTop": "5em",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "content": "Cannot generate forms for objects without providing a producer for them",
              "error": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/import",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "basic": true,
        "children": Array [
          <Menu
            fixed="top"
          >
            <MenuItem
              as={[Function]}
              disabled={false}
              header={true}
              to="/lds/"
            >
              LDS Objects
              <Label
                color="teal"
                size="large"
              >
                0
              </Label>
            </MenuItem>
            <Dropdown
              additionLabel="Add "
              additionPosition="top"
              closeOnBlur={true}
              deburr={false}
              disabled={false}
              icon="dropdown"
              item={true}
              minCharacters={1}
              noResultsMessage="No results found."
              openOnFocus={true}
              renderLabel={[Function]}
              scrolling={true}
              searchInput="text"
              selectOnBlur={true}
              selectOnNavigation={true}
              text="Show all"
              wrapSelection={true}
            >
              <DropdownMenu />
            </Dropdown>
            <Dropdown
              additionLabel="Add "
              additionPosition="top"
              closeOnBlur={true}
              deburr={false}
              disabled={false}
              icon="dropdown"
              item={true}
              minCharacters={1}
              noResultsMessage="No results found."
              openOnFocus={true}
              renderLabel={[Function]}
              scrolling={true}
              searchInput="text"
              selectOnBlur={true}
              selectOnNavigation={true}
              text="Create new"
              wrapSelection={true}
            >
              <DropdownMenu />
            </Dropdown>
            <MenuItem
              as={[Function]}
              content="Import"
              to="/import"
            />
            <MenuMenu
              position="right"
            >
              <Dropdown
                additionLabel="Add "
                additionPosition="top"
                closeOnBlur={true}
                deburr={false}
                icon="dropdown"
                item={true}
                minCharacters={1}
                noResultsMessage="No results found."
                openOnFocus={true}
                renderLabel={[Function]}
                searchInput="text"
                selectOnBlur={true}
                selectOnNavigation={true}
                text="Language (English)"
                wrapSelection={true}
              >
                <DropdownMenu>
                  <DropdownItem
                    onClick={[Function]}
                  >
                    <Flag
                      as="i"
                      name="no"
                    />
                     
                    Norwegian
                  </DropdownItem>
                  <DropdownItem
                    onClick={[Function]}
                  >
                    <Flag
                      as="i"
                      name="gb"
                    />
                     
                    English
                  </DropdownItem>
                </DropdownMenu>
              </Dropdown>
            </MenuMenu>
          </Menu>,
          <Container
            fluid={true}
            style={
              Object {
                "marginTop": "5em",
              }
            }
          >
            <Message
              content="Cannot generate forms for objects without providing a producer for them"
              error={true}
            />
            <Route
              component={[Function]}
              exact={true}
              path="/import"
            />
          </Container>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <MenuItem
                as={[Function]}
                disabled={false}
                header={true}
                to="/lds/"
              >
                LDS Objects
                <Label
                  color="teal"
                  size="large"
                >
                  0
                </Label>
              </MenuItem>,
              <Dropdown
                additionLabel="Add "
                additionPosition="top"
                closeOnBlur={true}
                deburr={false}
                disabled={false}
                icon="dropdown"
                item={true}
                minCharacters={1}
                noResultsMessage="No results found."
                openOnFocus={true}
                renderLabel={[Function]}
                scrolling={true}
                searchInput="text"
                selectOnBlur={true}
                selectOnNavigation={true}
                text="Show all"
                wrapSelection={true}
              >
                <DropdownMenu />
              </Dropdown>,
              <Dropdown
                additionLabel="Add "
                additionPosition="top"
                closeOnBlur={true}
                deburr={false}
                disabled={false}
                icon="dropdown"
                item={true}
                minCharacters={1}
                noResultsMessage="No results found."
                openOnFocus={true}
                renderLabel={[Function]}
                scrolling={true}
                searchInput="text"
                selectOnBlur={true}
                selectOnNavigation={true}
                text="Create new"
                wrapSelection={true}
              >
                <DropdownMenu />
              </Dropdown>,
              <MenuItem
                as={[Function]}
                content="Import"
                to="/import"
              />,
              <MenuMenu
                position="right"
              >
                <Dropdown
                  additionLabel="Add "
                  additionPosition="top"
                  closeOnBlur={true}
                  deburr={false}
                  icon="dropdown"
                  item={true}
                  minCharacters={1}
                  noResultsMessage="No results found."
                  openOnFocus={true}
                  renderLabel={[Function]}
                  searchInput="text"
                  selectOnBlur={true}
                  selectOnNavigation={true}
                  text="Language (English)"
                  wrapSelection={true}
                >
                  <DropdownMenu>
                    <DropdownItem
                      onClick={[Function]}
                    >
                      <Flag
                        as="i"
                        name="no"
                      />
                       
                      Norwegian
                    </DropdownItem>
                    <DropdownItem
                      onClick={[Function]}
                    >
                      <Flag
                        as="i"
                        name="gb"
                      />
                       
                      English
                    </DropdownItem>
                  </DropdownMenu>
                </Dropdown>
              </MenuMenu>,
            ],
            "fixed": "top",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "as": [Function],
                "children": Array [
                  "LDS Objects",
                  <Label
                    color="teal"
                    size="large"
                  >
                    0
                  </Label>,
                ],
                "disabled": false,
                "header": true,
                "to": "/lds/",
              },
              "ref": null,
              "rendered": Array [
                "LDS Objects",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": 0,
                    "color": "teal",
                    "size": "large",
                  },
                  "ref": null,
                  "rendered": 0,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "additionLabel": "Add ",
                "additionPosition": "top",
                "children": <DropdownMenu />,
                "closeOnBlur": true,
                "deburr": false,
                "disabled": false,
                "icon": "dropdown",
                "item": true,
                "minCharacters": 1,
                "noResultsMessage": "No results found.",
                "openOnFocus": true,
                "renderLabel": [Function],
                "scrolling": true,
                "searchInput": "text",
                "selectOnBlur": true,
                "selectOnNavigation": true,
                "text": "Show all",
                "wrapSelection": true,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [],
                },
                "ref": null,
                "rendered": Array [],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "additionLabel": "Add ",
                "additionPosition": "top",
                "children": <DropdownMenu />,
                "closeOnBlur": true,
                "deburr": false,
                "disabled": false,
                "icon": "dropdown",
                "item": true,
                "minCharacters": 1,
                "noResultsMessage": "No results found.",
                "openOnFocus": true,
                "renderLabel": [Function],
                "scrolling": true,
                "searchInput": "text",
                "selectOnBlur": true,
                "selectOnNavigation": true,
                "text": "Create new",
                "wrapSelection": true,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [],
                },
                "ref": null,
                "rendered": Array [],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "as": [Function],
                "content": "Import",
                "to": "/import",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <Dropdown
                  additionLabel="Add "
                  additionPosition="top"
                  closeOnBlur={true}
                  deburr={false}
                  icon="dropdown"
                  item={true}
                  minCharacters={1}
                  noResultsMessage="No results found."
                  openOnFocus={true}
                  renderLabel={[Function]}
                  searchInput="text"
                  selectOnBlur={true}
                  selectOnNavigation={true}
                  text="Language (English)"
                  wrapSelection={true}
                >
                  <DropdownMenu>
                    <DropdownItem
                      onClick={[Function]}
                    >
                      <Flag
                        as="i"
                        name="no"
                      />
                       
                      Norwegian
                    </DropdownItem>
                    <DropdownItem
                      onClick={[Function]}
                    >
                      <Flag
                        as="i"
                        name="gb"
                      />
                       
                      English
                    </DropdownItem>
                  </DropdownMenu>
                </Dropdown>,
                "position": "right",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "additionLabel": "Add ",
                  "additionPosition": "top",
                  "children": <DropdownMenu>
                    <DropdownItem
                      onClick={[Function]}
                    >
                      <Flag
                        as="i"
                        name="no"
                      />
                       
                      Norwegian
                    </DropdownItem>
                    <DropdownItem
                      onClick={[Function]}
                    >
                      <Flag
                        as="i"
                        name="gb"
                      />
                       
                      English
                    </DropdownItem>
                  </DropdownMenu>,
                  "closeOnBlur": true,
                  "deburr": false,
                  "icon": "dropdown",
                  "item": true,
                  "minCharacters": 1,
                  "noResultsMessage": "No results found.",
                  "openOnFocus": true,
                  "renderLabel": [Function],
                  "searchInput": "text",
                  "selectOnBlur": true,
                  "selectOnNavigation": true,
                  "text": "Language (English)",
                  "wrapSelection": true,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <DropdownItem
                        onClick={[Function]}
                      >
                        <Flag
                          as="i"
                          name="no"
                        />
                         
                        Norwegian
                      </DropdownItem>,
                      <DropdownItem
                        onClick={[Function]}
                      >
                        <Flag
                          as="i"
                          name="gb"
                        />
                         
                        English
                      </DropdownItem>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "norwegian",
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <Flag
                            as="i"
                            name="no"
                          />,
                          " ",
                          "Norwegian",
                        ],
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "as": "i",
                            "name": "no",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        " ",
                        "Norwegian",
                      ],
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "english",
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <Flag
                            as="i"
                            name="gb"
                          />,
                          " ",
                          "English",
                        ],
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "as": "i",
                            "name": "gb",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        " ",
                        "English",
                      ],
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Message
                content="Cannot generate forms for objects without providing a producer for them"
                error={true}
              />,
              Array [],
              Array [],
              <Route
                component={[Function]}
                exact={true}
                path="/import"
              />,
            ],
            "fluid": true,
            "style": Object {
              "marginTop": "5em",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "content": "Cannot generate forms for objects without providing a producer for them",
                "error": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/import",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
